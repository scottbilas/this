Abs( float f )
ActivateInterface( gpstring const & sInterfacePath, bool bShow )
Add( eQueryTrait qt )
Add( Go* go )
Add( Goid goid )
Add( UIWindow* wnd )
AddActiveItem( UIWindow * pItem )
AddAnimToBlendGroup(DWORD i,float relw)
AddAnimToBlendGroup(DWORD i,float relw, bool f)
AddBlankInterface( const gpstring& sName )
AddChild( Go* child )
AddChild( UIWindow * pWindow )
AddDb( const char * name, bool xferDb )
AddElement( const gpstring& sText, int tag )
AddElement( const gpstring& sText, int tag, DWORD dwColor )
AddIcon( const gpstring& texture, int icon )
AddMemberNow( Go* member )
AddNewSinkToContext( const char* context, const char* name, const char* sinkFactory )
AddNewSinkToContext( const char* context, const char* name, const char* sinkFactory, const char* sinkParams )
AddNewSinkToContext( const char* context, const char* sinkFactory )
AddNewSinkToSink( const char* sink, const char* name, const char* sinkFactory )
AddNewSinkToSink( const char* sink, const char* sinkFactory )
AddRapiFader( bool bFadeIn, const float duration )
AddReportFilters( const gpstring& filter )
AddSkritBot( const char* skritName )
AddTimerSeconds( int id, float extraTime )
AddToGroup(Blender* b,DWORD c, DWORD s, DWORD i, float w, bool fc)
AddToHotGroup( Goid goid )
AddToHotGroup( Goid goid, bool add )
AddVariable( SiegePos &position, Goid owner )
AddWindowToInterface( UIWindow *pWindow, const gpstring& sInterface, bool bExistFail )
AlertRangedAttack( Goid target )
AmFacing( Go * target ) const
AmFacing( SiegePos const & target ) const
AnimationCallback(DWORD msg)
AnimEventBitTest( DWORD dw, eAnimEvent ev )
Append( gpstring& str, const char* extra )
AppendF( gpstring& str, const char* format, ... )
ApplyEnchantments( Goid target, Goid source )
AreHumanPartyMembersInNodes( int region, int section, int level, int object )
AreScreenPartyMembersInNodes( int region, int section, int level, int object )
Assert( int testExpr )
Assert( int testExpr, const char* msg )
AssertF( int testExpr, const char* format, ... )
Assign( gpstring& str, const char* extra )
AssignF( gpstring& str, const char* format, ... )
AttachDeformableChild( HAspect hchild )
AttachReverseLinkedChild( HAspect hchild, const char* parentbone, const char* childbone, const Quat& offsetrot, const vector_3& offsetpos )
AttachReverseLinkedChild( HAspect hchild, const char* parentbone, const char* childbone )
AttachRigidLinkedChild( HAspect hchild, const char* parentbone, const char* childbone, bool hastracers )
AutoSize( UIWindow * pWindow, int index )
AwardExperience( Goid Client, Goid Weapon, float experience_points )
AzimuthAngleToTarget( Goid go, Goid target )
BaseAnimDurationForStance( DWORD stance) const
BeginProfile( int frameCount )
BeginProfile( int frameCount , bool saveWhenDone )
BuildTargetTypeFlags( Go * caster, Go * target )
CalcSecondTierTarget( Go const * attacker, Go const * target )
CalculateAimingError( Goid Client, const char *szSkill, float &x_axis, float &y_axis )
CalculateDamage( Goid Attacker, Goid Weapon, Goid Victim, float min_damage, float max_damage, float total_defense, bool bPiercing )
CalculateExperience( Goid Attacker, Goid Weapon, Goid Victim, float damage )
CalculateMagnitude( float mag_a, float damage )
CalculateWeaponAimingError( Goid Weapon, float &x_axis, float &y_axis )
CameraOrderFromString( const char* str )
CanAdd( const Go* item, eInventoryLocation il, bool autoPlace ) const
CancelExpiration( Go* go, bool forced )
CanHit( Goid Attacker, Goid Victim, Goid AttackerWeapon, Goid VictimWeapon )
CanOperateOn( Go * go )
CanReachNextLevel( Go const * caster )
Ceil( float f )
ChangeLife( Goid Client, float Delta )
ChangeLife( Goid Client, float Delta, DWORD rpcWhere )
ChangeLifeLocal( Goid Client, float Delta )
ChangeMana( Goid Client, float Delta )
ChangeMana( Goid Client, float Delta, DWORD rpcWhere )
ChangeManaLocal( Goid Client, float Delta )
CheckAutoSaveParty( bool ignoreMinTime )
CheckCommand( const char* command )
CheckFile( const char* skritName )
CheckForCriticalHit( Goid Attacker, Goid Victim )
Class( const char* className )
Classes( bool includeHidden )
Clear( eJobQ q )
ClearAndCommit( eJobQ q )
ClearDebugHudOptions( eDebugHudOptions options )
ClearInstanceAttrFlags(DWORD newval)
ClearVariables( Goid owner )
CloneLocalGo( const GoCloneReq& cloneReq )
CloseBlendGroup(bool merge)
CloseBlendGroupWithTransition(float t, bool a)
cls( UIWindow* base ) \
Command( const char* command )
ComputeAimingAngle( const SiegePos &firingPos, const SiegePos &targetPos, float velocity )
ComputeAimingAngle( Goid ammo, const SiegePos &firingPos, const SiegePos &targetPos, float velocity )
ComputeTargetPos( Goid target )
Contains( const Go* item ) const
Contains( gpstring const & member ) const
ContainsAll( Membership const & membership ) const
ContainsAny( Membership const & membership ) const
ConvertRatioToAttackBlend( const float x, const float y,const float deg0,const float deg1)
ConvertRatioToWalkBlend( const float x, const float z)
Copy( const SiegePos& obj )
Copy( const SiegeRot& obj )
Cos( float f )
CreateCommonCtrl( const gpstring& sTemplate )
CreateDamageVolume( const SiegePos &start_pos, const SiegePos &end_pos, float start_radius, float end_radius,
CreateDamageVolume( Goid source, Goid target, float length, float start_radius, float end_radius, float damage, float duration,
CreateDefaultWindowOfType( const gpstring& sType )
CreateExplosion( const SiegePos &position, float radius, float magnitude, float damage, Goid Owner, Goid OwnerWeapon )
CreateFrameTimer( int framesFromNow )
CreateFrameTimer( int id, int framesFromNow )
CreateTimer( float timeFromNow )
CreateTimer( int id, float timeFromNow )
DamageGo( Goid Victim, Goid Attacker, Goid AttackerWeapon, float amount, bool piercing_damage, bool explosive_damage )
DamageGoMagic( Goid Attacker, Goid Spell, Goid Victim, SiegePos &damage_origin )
DamageGoMelee( Goid Attacker, Goid Weapon, Goid Victim )
DamageGoParticle( Goid Victim, Goid Attacker, Goid AttackerWeapon, float min_damage, float max_damage, float exposure_time, bool award_xp, bool bIgnite, bool bCalcFireResist )
DamageGoRanged( Goid Attacker, Goid Weapon, Goid Victim )
DamageGoTrap( Goid Victim, Goid Attacker, Goid AttackerWeapon, float min_damage, float max_damage )
DamageGoVolume( Goid Victim, Goid Attacker, Goid AttackerWeapon, float damage, float delta_t, bool explosive_damage )
DeactivateInterface( const gpstring& interface_name )
DeactivateInterfaceWindows( const gpstring& sInterface )
DebugBreakOn( Goid breakGoid )
Debugger( const char* msg )
DebuggerF( const char* format, ... )
DebugSetShowHandleAccess( bool flag )
DecodeAttackDeviation( const DWORD flags )
DecodeAttackElevation( const DWORD flags )
DecodeAttackLoopDuration( const DWORD flags )
DegreesToRadians( float f )
DeleteWindow( UIWindow * pWindow )
Deselect( Goid goid )
DestroyTimer( int id )
DetachChild(HAspect hchild)
DetermineHitType( float damage_done, float min_damage, float max_damage )
Disable( const char* context )
Disassemble( const char* skritName )
Disassemble( ReportSys::Context* ctx ) const
DisassembleCommand( const char* command )
DisassembleCurrent( ReportSys::Context* ctx ) const
DoesActivePartyHaveTemplate( const char * sTemplate, Goid target )
DoesSphereHaveHumanControlledOccupants( const SiegePos& center, float radius )
DoesSphereHaveOccupants( const SiegePos& center, float radius )
DoingJobOriginatingFrom( eJobQ q, Go * origin )
DoWindowsOverlap( const char * szWindow1, const char * szInterface1,
DoWindowsOverlap( UIWindow * pWindow1, UIWindow * pWindow2 )
DragWindow( int delta_x, int delta_y )
DrawDebugArc( const SiegePos& PosA, const SiegePos& PosB, DWORD const color, const gpstring& sName, bool drawticks)
DrawDebugBoxStack( const SiegePos& pos, const float size, DWORD color, float duration, const matrix_3x3& orient )
DrawDebugCircle( SiegePos const& Center, float Radius, DWORD const Color, gpstring const& sName )
DrawDebugDashedLine( const SiegePos& PosA, const SiegePos& PosB, DWORD const Color, const gpstring& sName )
DrawDebugDirectedLine( const SiegePos& PosA, const SiegePos& PosB, DWORD const Color, const gpstring& sName )
DrawDebugLine( const SiegePos& PosA, const SiegePos& PosB, DWORD const Color, const gpstring& sName )
DrawDebugLine( const SiegePos& PosA, const SiegePos& PosB, DWORD const Color, const gpstring& sName, float duration )
DrawDebugLinkedTerrainPoints( const SiegePos& PosA, const SiegePos& PosB, DWORD const Color, const gpstring& sName )
DrawDebugPoint( const SiegePos& Center, float Radius, DWORD const Color, const gpstring& sName )
DrawDebugPoint( SiegePos const& Center, float Radius, DWORD const Color, float height, gpstring const& sName, DWORD labelColor )
DrawDebugPulsePolygon( SiegePos const& Center, float MinRadius, float MaxRadius, float PulsePeriod, unsigned int Sides, DWORD const Color, gpstring const& sName )
DrawDebugScreenLabel( SiegePos const& Pos, gpstring const & name)
DrawDebugScreenLabelColor( SiegePos const& Pos, gpstring const & name, DWORD color)
DrawDebugSphere( const SiegePos& Center, float Radius, DWORD const Color, const gpstring& sName )
DrawDebugSphereConeSection( const SiegePos& Position, const vector_3& Direction, float Angle, float Radius, DWORD const Color, const gpstring& sName )
DrawDebugSphereOffsetAngle( const SiegePos& Center, float Radius, float OffsetAngle, DWORD const Color, const gpstring& sName )
DrawDebugTriangle( const SiegePos& Center, float Radius, DWORD const Color, const gpstring& sName )
DrawDebugWedge( const SiegePos& Center, float Radius, SiegePos const& Direction, float ArcLength, DWORD Color, bool filled)
DrawDebugWedge( const SiegePos& Center, float Radius, vector_3 const& Direction, float ArcLength, DWORD Color, bool filled)
DrawDebugWorldLabelScroll( SiegePos const& Pos, gpstring const & name, DWORD color, float duration, bool scroll)
DropItemsFor( Goid killerGoid )
Dump( bool verbose, ReportSys::Context * ctx )
Dump( const char* skritName )
Dump( Goid go, ReportSys::Context * ctx )
Dump( ReportSys::Context * ctx )
Dump( ReportSys::Context* ctx ) const
Dump2( bool verbose, ReportSys::Context * ctx )
DumpActorStats( Go const * go, ReportSys::Context * ctx )
DumpCommand( const char* command )
DumpFile( const char* fileName )
DumpPerformanceSummary( bool footerMode, ReportSys::Context * ctx )
DumpStateMachine( ReportSys::Context* ctx ) const
Enable( bool enable )
Enable( const char* context )
EnableAutoExpiration( bool set )
EnableIme( bool bSet )
EncodeAttackParameters( float loopdur, float elevation, float deviation, DWORD& flags)
EnterAtomicState( float duration )
Enum( const char* enumName )
Enums( bool includeConstants )
Error( const char* msg )
ErrorBox( const char* msg )
ErrorBoxF( const char* format, ... )
ErrorF( const char* format, ... )
EvalBoolFormula( const char* formula )
EvalBoolFormula( const char* formula, bool defValue )
EvalFloatFormula( const char* formula )
EvalFloatFormula( const char* formula, float defValue )
EvalIntFormula( const char* formula )
EvalIntFormula( const char* formula, int defValue )
EvaluateAttackDamageModifierMax( Go const * caster, Go const * target ) const
EvaluateAttackDamageModifierMin( Go const * caster, Go const * target ) const
EvaluateCastExperience( Go const * caster, Go const * target ) const
EvaluateEffectDuration( Go const * caster, Go const * target ) const
EvaluateManaCost( Go const * caster, Go const * target ) const
Execute( const char* skritName )
Execute( const char* skritName, const char* funcName )
Execute( const gpstring& line )
ExplodeGoWithDamage( Goid Object, Goid Owner, Goid OwnerWeapon )
FadeMoodVolume( float fadeTime, DWORD volume )
Fatal( const char* msg )
FatalF( const char* format, ... )
FilterSmoothStep( float a, float b, float x )
FilterSmoothStep( float x )
FindClearLosPoint( Go const * from, Go const * to, float maxDist, float maxAngle, SiegePos & out )
FindClearLosPoint( Go const * from, SiegePos const & to, float maxDist, float maxAngle, SiegePos & out )
FindDb( const char * name )
FindGoidByScid( Scid scid ) const
FindNodalTextureIndex( SiegeId node, const gpstring& texName )
FindSpotForDrop( Go * dropper,
FindSpotRelativeToSource( Go * source,
FindSpotRelativeToSource( SiegePos const * source,
FindUIWindow( const char* window_name, const char* sInterface )
FinishScript( SFxSID id )
FlashElementIcon( int tag, float duration )
Floor( float f )
Flush( Goid owner )
Flush( Goid owner , float delay )
Foo( const char* name )
Foo( float f )
Foo( float f, int i )
ForceUpdateFog( float transTime )
ForceUpdateMusic( float transTime )
ForceUpdateRain( float transTime )
ForceUpdateSnow( float transTime )
ForceUpdateWind( float transTime )
Format( const char* format, ... )
FromPercent( float f )
FromString( const char* str, eAlteration& e )
FromString( const char* str, eAxisHint& val )
FromString( const char* str, eCameraInterpolate& val )
FromString( const char* str, eJobAbstractType & Type )
FromString( const char* str, eMoodRoomType& val )
FromString( const char* str, eWorldEvent& val )
FromString( const char* str, FADETYPE& val )
FromString( const char* str, MCP::eOrientMode & x )
FromString( const char* str, MCP::eReqRetCode & x )
FromString( const char* str, MCP::eRequest & x )
FromString( const char* str, MCP::eRID & x )
FromString( const char* str, Type& obj )
GenerateDocs( ReportSys::Context* ctx ) const
Generic( const char* msg )
GenericF( const char* format, ... )
Get( Go * reference, eQueryTrait qt, GopColl const & in, GopColl & out ) const
Get( Go * reference, QtColl const & qtc, GopColl const & in, GopColl & out ) const
Get( int index ) const
Get2DDistance( Go * pTo ) const
GetAlpha( DWORD intColor )
GetAlterationSum( Go const * client, eAlteration Alteration ) const
GetAspectTextureSpeed( int texIndex )
GetAutoItems( eQueryTrait itemTrait, GopColl & out ) const
GetAutoItems( GopColl & out ) const
GetAutoItems( QtColl & qtc, GopColl & out ) const
GetBaseDuration( eAnimChore c, eAnimStance s) const
GetBaseJat( eJobAbstractType in )
GetBlendedPRSDebugName(DWORD i)
GetBlendGroupAnimWeight(DWORD g,DWORD i)
GetBlendGroupWeight(DWORD g)
GetBlockCustomDamage( const char * damageType ) const
GetBlockPartCustomDamage( const char * damageType ) const
GetBlue( DWORD intColor )
GetBoneFrozenState(const char* bonename) const
GetBoneIndex( char const * bone_name, int& bone_index) const
GetBoneOrientation( char const * bone_name, vector_3& bone_position, Quat& bone_rotation ) const
GetBool( const char * key )
GetBool( const char* key ) const
GetBool( const char* key, bool def ) const
GetBool( int tag, const char * key )
GetChild(DWORD k)
GetClosestVisible( eQueryTrait trait ) const
GetClosestVisible( eQueryTrait trait, GopColl & out ) const
GetClosestVisible( QtColl & qtc ) const
GetClosestVisible( QtColl & qtc, GopColl & out ) const
GetComponent( const char* name )
GetComponentBool( const char* componentName, const char* propertyName )
GetComponentBool( const char* componentName, const char* propertyName, bool defBool )
GetComponentFloat( const char* componentName, const char* propertyName )
GetComponentFloat( const char* componentName, const char* propertyName, float defFloat )
GetComponentInt( const char* componentName, const char* propertyName )
GetComponentInt( const char* componentName, const char* propertyName, int defInt )
GetComponentScid( const char* componentName, const char* propertyName )
GetComponentScid( const char* componentName, const char* propertyName, Scid defScid )
GetComponentString( const char* componentName, const char* propertyName )
GetComponentString( const char* componentName, const char* propertyName, const gpstring& defString )
GetCount( Go * reference, eQueryTrait qt, GopColl const & in ) const
GetCount( Go * reference, QtColl const & qtc, GopColl const & in ) const
GetCurrentAspectTexture( int texIndex )
GetCurrPositionX(int t) const
GetCurrPositionY(int t) const
GetCurrPositionZ(int t) const
GetCurrRotationW(int t) const
GetCurrRotationX(int t) const
GetCurrRotationY(int t) const
GetCurrRotationZ(int t) const
GetCustomDamageChance( const char * damageType ) const
GetCustomDamageMax( const char * damageType ) const
GetCustomDamageMin( const char * damageType ) const
GetDamageRange( Goid Client, Goid Weapon, float &min_damage, float &max_damage )
GetDamageRange( Goid Client, Goid Weapon, float &min_damage, float &max_damage, bool bUseDifficulty )
GetDelimitedBool( const char* in, int index )
GetDelimitedBool( const char* in, int index, char delimiter )
GetDelimitedBool( const char* in, int index, char delimiter, bool defValue )
GetDelimitedFloat( const char* in, int index, char delimiter )
GetDelimitedFloat( const char* in, int index, char delimiter, float defValue )
GetDelimitedInt( const char* in, int index )
GetDelimitedInt( const char* in, int index, char delimiter )
GetDelimitedInt( const char* in, int index, char delimiter, int defValue )
GetDelimitedString( const char* in, int index )
GetDelimitedString( const char* in, int index, char delimiter )
GetDelimitedString( const char* in, int index, char delimiter, const char* defValue )
GetDistance( Go * pTo ) const
GetDistance( SiegePos const & begin, SiegePos const & end )
GetDistanceAtPlanEnd( Go * pGo ) const
GetDouble( const char * key )
GetDouble( int tag, const char * key )
GetDuration( DWORD i) const
GetDuration( eAnimChore c, eAnimStance s, DWORD i) const
GetEnemiesInSphere( float const r, GopColl * output ) const
GetEngagedMe( GopColl & out ) const
GetEngagedMeEnemies( GopColl & out ) const
GetEquipped( eEquipSlot slot ) const
GetEquippedSlot( const Go* item ) const
GetEquippedSlot( Goid item ) const
GetFarthestVisible( eQueryTrait trait ) const
GetFarthestVisible( eQueryTrait trait, GopColl & out ) const
GetFarthestVisible( QtColl & qtc ) const
GetFarthestVisible( QtColl & qtc, GopColl & out ) const
GetFileNameOnly( const gpstring& str )
GetFirstN( Go * reference, eQueryTrait qt, unsigned int N, GopColl const & in, GopColl & out ) const
GetFirstN( Go * reference, QtColl const & qtc, unsigned int N, GopColl const & in, GopColl & out ) const
GetFloat( const char * key )
GetFloat( const char* key ) const
GetFloat( const char* key, float def ) const
GetFloat( int tag, const char * key )
GetFocusGo( PlayerId playerId ) const
GetFriendsInSphere( float const r, GopColl & output ) const
GetFrontJob( eJobQ Q ) const
GetGameStat( const char * stat )
GetGenericStateSpellGoid( const char* sName ) const
GetGenericStateSpellLevel( const char* sName ) const
GetGoMoodSetting( Goid go )
GetGoRequestedMood( Goid go )
GetGreen( DWORD intColor )
GetHumanPartyMembersInNodes( int region, int section, int level, int object, GopColl& out )
GetHumanPlayerOnMachine( DWORD machineId )
GetIndexedBoneFrozenState( DWORD bone_index ) const
GetIndexedBoneOrientation( int bone_index, vector_3& bone_position, Quat& bone_rotation ) const
GetIndexedBonePosition( int bone_index, vector_3& bone_position ) const
GetIndexedCornerPosNorm( DWORD sm, DWORD index, vector_3& pos, vector_3& norm ) const
GetInt( const char * key )
GetInt( const char* key ) const
GetInt( const char* key, int def ) const
GetInt( int tag, const char * key )
GetItem( eInventoryLocation il ) const
GetItemFromTemplate( const gpstring & sTemplate ) const
GetLastChoreRequestedIsStillValid( Goid owner, eAnimChore ch, eAnimStance st )
GetLastRequestTimeRemaining( Goid owner )
GetLocation( const Go* item ) const
GetLongestAlteration( Goid goid, Goid target, Goid source, Goid item )
GetLongestAlteration( Goid target, Goid source )
GetLOSPoint( Go const * go, SiegePos & point ) const
GetLOSPoint( Go const * go, vector_3 & point ) const
GetMagicLevel( Go const * caster )
GetMax( Go * reference, eQueryTrait qt, GopColl const & in ) const
GetMax( Go * reference, eQueryTrait qt, GopColl const & in, GopColl & out ) const
GetMax( Go * reference, QtColl const & qtc, GopColl const & in, GopColl & out ) const
GetMaxN( Go * reference, eQueryTrait const * qt, unsigned int qtCount, unsigned int N, GopColl const & in, GopColl & out ) const
GetMaxN( Go * reference, eQueryTrait qt, unsigned int N, GopColl const & in, GopColl & out ) const
GetMaxN( Go * reference, QtColl const & qtc, unsigned int N, GopColl const & in, GopColl & out ) const
GetMessage( const char* messageName )
GetMin( Go * reference, eQueryTrait qt, GopColl const & in ) const
GetMin( Go * reference, eQueryTrait qt, GopColl const & in, GopColl & out ) const
GetMin( Go * reference, QtColl const & qtc, GopColl const & in, GopColl & out ) const
GetMinDurationAnim( eAnimChore c, eAnimStance s) const
GetMinN( Go * reference, eQueryTrait const * qt, unsigned int qtCount, unsigned int N, GopColl const & in, GopColl & out ) const
GetMinN( Go * reference, eQueryTrait qt, unsigned int N, GopColl const & in, GopColl & out ) const
GetMinN( Go * reference, QtColl const & qtc, unsigned int N, GopColl const & in, GopColl & out ) const
GetModifierMax( const char* templateName, const char* variationName ) const
GetModifierMin( const char* templateName, const char* variationName ) const
GetModifierPower( const char* modifierName ) const
GetMoodSetting( const gpstring& moodName )
GetName( gpstring& name ) const
GetNet( gpstring & out )
GetNextLevelXP( float current_level ) const
GetNodalTextureAnimationSpeed( SiegeId node, int tex_index )
GetNodalTextureAnimationState( SiegeId node, int tex_index )
GetNumActiveItems( const gpstring& sInterface )
GetNumberOfEvents(eAnimEvent ev) const
GetNumCorners(DWORD sm)
GetNumDelimitedValues( const char* in )
GetNumDelimitedValues( const char* in, char delimiter )
GetNumSubAnims( eAnimChore c, eAnimStance s) const
GetOccupantsInSphere( const SiegePos& center, float radius, GopColl& out )
GetOccupantsInSphere( float const r, GopColl & output ) const
GetOriginalMoodSetting( const gpstring& moodName )
GetPartyMembersInSphere( float const r, GopColl * output ) const
GetPlayer( gpwstring const & sName )
GetPlayer( PlayerId playerId )
GetPlayerStat( const char * stat, PlayerId player )
GetPosition( SiegePos& pos ) const
GetPositionBehind( Go * target, SiegePos * pos ) const
GetPrimaryBoneOrientation( vector_3& bone_position, Quat& bone_rotation ) const
GetQuestBool( Goid goid, const char* mapName, const char* keyName ) const
GetQuestBool( Goid goid, const char* mapName, const char* keyName, bool defBool ) const
GetQuestFloat( Goid goid, const char* mapName, const char* keyName ) const
GetQuestFloat( Goid goid, const char* mapName, const char* keyName, float defFloat ) const
GetQuestInt( Goid goid, const char* mapName, const char* keyName ) const
GetQuestInt( Goid goid, const char* mapName, const char* keyName, int defInt ) const
GetQuestOrder( const gpstring & name )
GetQuestString( Goid goid, const char* mapName, const char* keyName ) const
GetQuestString( Goid goid, const char* mapName, const char* keyName, const gpstring& defString ) const
GetRandomOrientation( Quat & q )
GetRed( DWORD intColor )
GetRegionNameForNode( database_guid guid ) const
GetScalarVelocity( DWORD i) const
GetScalarVelocity( eAnimChore c, eAnimStance s, DWORD i) const
GetScidBit( Scid scid, int index ) const
GetScidBit( Scid scid, int index, bool defValue ) const
GetScidBits( Scid scid ) const
GetScidBits( Scid scid, DWORD defValue ) const
GetScreenName( gpstring& name ) const
GetScreenPartyMembersInNodes( int region, int section, int level, int object, GopColl& out )
GetSelectedText( gpstring& text )
GetSiegeDifference( vector_3& ret_diff, const SiegePos& pos_orig, const SiegePos& pos_dest )
GetSiegeDistance( const SiegePos& pos_orig, const SiegePos& pos_dest )
GetSimID( Goid object )
GetSkillLevel( const char* skill ) const
GetStateName( int state ) const
GetString( const char * key )
GetString( const char* key ) const
GetString( const char* key, const char* def ) const
GetString( int tag, const char * key )
GetSubAnimIndex( DWORD fourCC ) const
GetSubAnimIndex( eAnimChore c, DWORD fourCC ) const
GetSubAnimsAreLoaded( eAnimChore chore, eAnimStance stance ) const
GetTeamStat( const char * stat, int team )
GetTemplateBool( const char* templatePath )
GetTemplateBool( const char* templatePath, bool defBool )
GetTemplateFloat( const char* templatePath )
GetTemplateFloat( const char* templatePath, float defFloat )
GetTemplateInt( const char* templatePath )
GetTemplateInt( const char* templatePath, int defInt )
GetTemplateScid( const char* templatePath )
GetTemplateScid( const char* templatePath, Scid defScid )
GetTemplateString( const char* templatePath )
GetTemplateString( const char* templatePath, const gpstring& defString )
GetTerrainPosition( SiegePos const & c, float r, float angle, SiegePos & out )
GetTerrainPosition( SiegePos const & c, float r, SiegePos & pos )
GetTerrainPositionAtEnd( SiegePos const & begin, SiegePos const & end, float r, float alpha, SiegePos & out )
GetTerrainPositionAtEnd( SiegePos const & begin, SiegePos const & end, float r, float minAngle, float maxAngle, SiegePos & out )
GetText( gpstring& text ) const
GetTotalDefense( Goid Client )
GetTotalFireResistance( Goid Client )
GetTraitValue( Go const * reference, Go const * go, eQueryTrait qt ) const
GetVariable( UINT32 index, Goid owner )
GetVictoryConditionValue( const char * condition )
GetVisible( eQueryTrait trait ) const
GetVisible( eQueryTrait trait, float range ) const
GetVisible( eQueryTrait trait, GopColl & out ) const
GetVisible( eQueryTrait trait, GopColl & out, float range ) const
GetVisible( QtColl & qtc ) const
GetVisible( QtColl & qtc, float range ) const
GetVisible( QtColl & qtc, GopColl & out ) const
GetVisible( QtColl & qtc, GopColl & out, float range ) const
Global( const char* globalName )
HandleInputMessage( UIMessage & msg )
HasChild( const Go* child ) const
HasChild( Goid child ) const
HasComponent( const char* name ) const
HasEnchantment( Goid goid, const gpstring &sEnchantmentDescription )
HasEnchantmentNamed( Goid goid, const gpstring &sEnchantmentName )
HasEnchantments( Goid goid )
HasEnemiesInSphere( float const r ) const
HasEvent( eWorldEvent Event ) const
HasGenericState( const char* sName ) const
HasGoWithScid( Scid scid ) const
HasPartyMembersInSphere( float const r ) const
HasPlayer( PlayerId playerId )
HaveOccupantsInSphere( float const r ) const
Hide( const char * properties )
HideInterface( const gpstring& interface_name )
int index ) GetDelimitedFloat( const char* in,
Is( Go const * reference, Go const * go, eQueryTrait const * qt, unsigned int qtCount ) const
Is( Go const * reference, Go const * go, eQueryTrait qt ) const
Is( Go const * reference, Go const * go, eQueryTrait qt, float & pNormAdjVal ) const
Is( Go const * reference, Go const * go, QtColl const & qtColl ) const
IsActiveSpell( const Go* item ) const
IsAlive( eLifeState ls )
IsAreaWalkable( siege::eLogicalNodeFlags nodeFlags, SiegePos const & center, DWORD numSamples, float radius )
IsAttackJat( eJobAbstractType jat )
IsBeingWatched( Goid watched ) const
IsCastableOn( Go * target )
IsCastableOn( Go * target, bool CheckMana )
IsCastJat( eJobAbstractType jat )
IsConscious( eLifeState ls )
IsDead( eLifeState ls )
IsEmpty( const char* str )
IsEnabled( const char* context )
IsEndGame( eWorldState e )
IsEnemy( const Go * target ) const
IsEquipped( const Go* item ) const
IsExpiring( Go* go ) const
IsFriend( const Go * target ) const
IsGameStarting( eWorldState e )
IsGhost( eLifeState ls )
IsIn2DRange( Go * target, float range ) const
IsInEngageRange( Go * target, Go * weapon ) const
IsInFrontend( eWorldState e )
IsInGame( eWorldState e )
IsInHotGroup( Goid goid )
IsInMeleeEngageRange( Go * target ) const
IsInProjectileRange( float firing_velocity, const SiegePos &target_position )
IsInRange( const Go* a, const Go* b, float range )
IsInRange( Go * target, float range ) const
IsInRange( Go * target, Go * weapon, eRangeLimit limit ) const
IsInRange( SiegePos const & PosA, SiegePos const & PosB, float const Range )
IsInRangedEngageRange( Go * target ) const
IsInSpellRange( Go * target, Go * spell ) const
IsInStagingArea( eWorldState e )
IsInterfaceVisible( const gpstring& interface_name )
IsInVisibilityCone( Go * target ) const
IsLeafAttackJat( eJobAbstractType jat )
IsLoading( eWorldState e )
IsLosClear( Go * target ) const
IsLosClear( Go const * from, Go const * to ) const
IsLosClear( Go const * from, SiegePos const & to ) const
IsLosClear( SiegePos const & from, SiegePos const & to ) const
IsLosClear( SiegePos const & target ) const
IsMouseShadowed( Goid goid ) const
IsNodalPathingConnected( SiegeId targetNode, SiegeId connectNode )
IsQuestActive( const gpstring & name )
IsQuestCompleted( const gpstring & name )
IsSelected( Goid goid ) const
IsSendLocalOnly( DWORD machineId )
IsSlotEquipped( eEquipSlot slot ) const
IsSpellInProgress( const gpstring & templateName ) const
IsStagingArea( eWorldState e )
IsTeamMember( Goid object ) const
IsVictoryConditionMet( const char * condition )
IsVictoryConditionMet( const char * condition, int team )
IsWatching( Goid watcher ) const
JobRecentlyFailedToPathTo( Go * target )
JoinLanGame( const char* playerName, const char* password )
JoinLanGame( const char* playerName, const char* password, bool errorOnFail )
Left( gpstring& str, int len )
Length( const vector_3& v )
Length2( const vector_3& v )
LevelToXP( float level ) const
ListItems( eInventoryLocation il, GopColl& items ) const
ListItems( eQueryTrait qt, eInventoryLocation il, GopColl& items ) const
ListItems( QtColl & qtc, eInventoryLocation il, GopColl& items ) const
LoadCheckTexture( const gpstring& texture )
LoadSelectionTexture( const gpstring& texture )
LoadTexture( const gpstring& texture, bool bResizeWindow )
LoadTexture( unsigned int texture )
LoadUICursor( const gpstring& name, const gpstring& sInterface )
LocationContainsTemplate( eInventoryLocation il, const gpstring & sTemplate )
Make( const char* guidText )
Make( float x, float y, float z, const SiegeGuid& guid )
Make( float x, float y, float z, float w, const SiegeGuid& guid )
Make( float x, float y, float z, float w, unsigned int guidInt )
Make( float x, float y, float z, unsigned int guidInt )
Make( unsigned int guidInt )
MakeAnimChore( DWORD x )
MakeAnimReq( eAnimChore chore )
MakeCameraPosition( const SiegePos& siegePos, const Quat& quat )
MakeCameraPosition( const SiegePos& siegePos, const Quat& quat, float distance )
MakeColor( const vector_3& color )
MakeColor( const vector_3& color, float alpha )
MakeColor( float red, float green, float blue )
MakeColor( float red, float green, float blue, float alpha )
MakeCombatOrders( DWORD x )
MakeDecalId( DWORD d )
MakeGoCloneReq( const char* templateName )
MakeGoCloneReq( const char* templateName, PlayerId playerId )
MakeGoCloneReq( Goid cloneSource )
MakeGoCloneReq( Goid cloneSource, PlayerId playerId )
MakeGoCloneReq( Goid parent, const char* templateName )
MakeGoCloneReq( Goid parent, const char* templateName, PlayerId playerId )
MakeGoCloneReq( Goid parent, Goid cloneSource )
MakeGoCloneReq( Goid parent, Goid cloneSource, PlayerId playerId )
MakeGoid( DWORD intGoid )
MakeInt( DecalId d )
MakeInt( eAnimChore x )
MakeInt( eCombatOrders co )
MakeInt( eMovementOrders mo )
MakeInt( Goid g )
MakeInt( LightId l )
MakeInt( PlayerId p )
MakeInt( Scid s )
MakeInt( SiegeId s )
MakeJobReq( eJobAbstractType type, eJobQ q, eQPlace place, eActionOrigin origin )
MakeJobReq( eJobAbstractType type, eJobQ q, eQPlace place, eActionOrigin origin, eEquipSlot slot )
MakeJobReq( eJobAbstractType type, eJobQ q, eQPlace place, eActionOrigin origin, Goid goal )
MakeJobReq( eJobAbstractType type, eJobQ q, eQPlace place, eActionOrigin origin, Goid goal, Goid modifier )
MakeJobReq( eJobAbstractType type, eJobQ q, eQPlace place, eActionOrigin origin, Goid goal, Goid modifier, SiegePos const & pos )
MakeJobReq( eJobAbstractType type, eJobQ q, eQPlace place, eActionOrigin origin, Goid goal, SiegePos const & pos )
MakeJobReq( eJobAbstractType type, eJobQ q, eQPlace place, eActionOrigin origin, Goid item, eEquipSlot slot )
MakeJobReq( eJobAbstractType type, eJobQ q, eQPlace place, eActionOrigin origin, SiegePos const & pos )
MakeJobReq( eJobAbstractType type, eJobQ q, eQPlace place, eActionOrigin origin, SiegePos const & pos, Goid modifier )
MakeLightId( DWORD d )
MakeMovementOrders( DWORD x )
MakePlayerId( DWORD d )
MakeQuat( float x, float y, float z, float w )
MakeRequest( Goid owner, eRequest type)
MakeRequest( Goid owner, eRequest type, DWORD subanim)
MakeRequest( Goid owner, eRequest type, DWORD subanim, eReqFlag flags)
MakeRequest( Goid owner, eRequest type, DWORD subanim, float range )
MakeRequest( Goid owner, eRequest type, DWORD subanim, float range, eReqFlag flags )
MakeRequest( Goid owner, eRequest type, DWORD subanim, Goid targetGo, float look_ahead, float max_time, float range )
MakeRequest( Goid owner, eRequest type, DWORD subanim, Goid targetGo, float look_ahead, float max_time, float range, eReqFlag flags )
MakeRequest( Goid owner, eRequest type, DWORD subanim, SiegePos const & targetPos, float range )
MakeRequest( Goid owner, eRequest type, DWORD subanim, SiegePos const & targetPos, float range, eReqFlag flags )
MakeRequest( Goid owner, eRequest type, eAnimChore ch, DWORD subanim, DWORD flags )
MakeRequest( Goid owner, eRequest type, eReqFlag flags)
MakeRequest( Goid owner, eRequest type, float duration, const SiegePos& targetPos, float range )
MakeRequest( Goid owner, eRequest type, float duration, const SiegePos& targetPos, float range, eReqFlag flags )
MakeRequest( Goid owner, eRequest type, float duration, DWORD subanim, Goid targetGo, float look_ahead, float max_time, float range)
MakeRequest( Goid owner, eRequest type, float duration, DWORD subanim, Goid targetGo, float look_ahead, float max_time, float range, eReqFlag flags)
MakeRequest( Goid owner, eRequest type, float duration, DWORD subanim, SiegePos const & targetPos, float range )
MakeRequest( Goid owner, eRequest type, float duration, DWORD subanim, SiegePos const & targetPos, float range, eReqFlag flags )
MakeRequest( Goid owner, eRequest type, float duration, Goid targetGo, float look_ahead, float max_time, float range)
MakeRequest( Goid owner, eRequest type, float duration, Goid targetGo, float look_ahead, float max_time, float range, eReqFlag flags)
MakeRequest( Goid owner, eRequest type, Goid targetGo )
MakeRequest( Goid owner, eRequest type, Goid targetGo, eReqFlag flags )
MakeRequest( Goid owner, eRequest type, Goid targetGo, float look_ahead, float max_time, float range )
MakeRequest( Goid owner, eRequest type, Goid targetGo, float look_ahead, float max_time, float range, eReqFlag flags )
MakeRequest( Goid owner, eRequest type, SiegePos const & targetPos )
MakeRequest( Goid owner, eRequest type, SiegePos const & targetPos, eReqFlag flags )
MakeRequest( Goid owner, eRequest type, SiegePos const & targetPos, float range )
MakeRequest( Goid owner, eRequest type, SiegePos const & targetPos, float range, eReqFlag flags )
MakeRequest( Goid owner, eRequest type, SiegeRot const & targetRot )
MakeRequest( Goid owner, eRequest type, SiegeRot const & targetRot, eReqFlag flags )
MakeScid( DWORD intScid )
MakeSiegeId( DWORD d )
MakeSiegePosString( const SiegePos& pos )
MakeStringF( const char* format, ... )
MakeUIMessage( eUIMessage code )
MakeVector( float x, float y, float z )
MarkForDeletion( eJobResult jr )
MarkInterfaceForActivation( const gpstring& interface_name, bool bShow )
MarkInterfaceForDeactivation( const gpstring& interface_name )
MaxFloat( float a, float b )
MaxInt( int a, int b )
MaySDoJob( eJobAbstractType jat )
MessageBox( const char* msg )
MessageBoxF( const char* format, ... )
MessagesAreInSync( Goid owner, eRID reqblock, eWorldEvent evt )
Mid( gpstring& str, int pos )
Mid( gpstring& str, int pos, int len )
MinFloat( float a, float b )
MinInt( int a, int b )
Move( eQPlace place, eActionOrigin origin, bool followMode )
MyFunction( const char* text )
Notify( const gpstring& message, UIWindow *ui_window )
NumSubAnimsForStance( DWORD stance ) const
OnCCWorldMessage( Skrit::Object* skrit, eWorldEvent, WorldMessage const * )
OnJobInit( Skrit::Object* skrit, Job * )
OnJobInitPointers( Skrit::Object* skrit, Job * )
OnProjectileCollision( Goid Projectile, Goid Collided )
OnResetChore( Skrit::HObject skrit)
OnStartChore( Skrit::HObject skrit, int subanim, int flags )
OnUpdate( Skrit::HObject skrit, float delta_t )
OnWorldMessage( Skrit::Object* skrit, eWorldEvent, WorldMessage const * )
OrbitAngleToTarget( Goid go, Goid target )
Output( const char* data )
Output( const char* data, int len )
Output( const gpstring& data )
OutputF( const char* format, ... )
OutputRaw( const char* data )
OutputRaw( const char* data, int len )
Perf( const char* msg )
PerfF( const char* format, ... )
PerfLog( const char* msg )
PerfLogF( const char* format, ... )
PickSafeSpotAwayFrom( Go * target, float distance, SiegePos & pos ) const
PlaceInterfaceOnTop( const char * interface_name )
PlayAmbientTrack( float fadeTime )
PlayBattleTrack( float fadeTime )
PlayMaterialSound( const char* eventName, const char* dstMaterial, bool local3d )
PlayMaterialSound( const char* eventName, Goid dstGoid , bool local3d )
PlaySound( const char* soundName, bool local3d , GPGSound::eSampleType sType )
PlaySound( const char* soundName, GPGSound::eSampleType sType,
PlayStandardTrack( float fadeTime )
PlayVoiceSound( const char* eventName, bool local3d )
PlayVoiceSound( const char* eventName, float minDist, float maxDist, bool bLoop )
PostWorldMessage( eWorldEvent event, Goid from, Goid to, DWORD data, float delay )
PostWorldMessage( eWorldEvent event, Goid from, Goid to, float delay )
PostWorldMessage( eWorldEvent event, Goid from, Scid to, DWORD data, float delay )
PostWorldMessage( eWorldEvent event, Goid from, Scid to, float delay )
PreloadCloneSource( Go* client, const char* templateName )
PreloadFuelBlock( const char* address, bool recurse )
PrepareToDrawNow( bool includeTextures )
Print( const char * name )
ProcessAction( UI_ACTION action, const gpstring& parameter )
ProcessChatMessage( UIEditBox *eb, const char* sInterface )
ProcessMessage( UIMessage & msg )
ProfilePContentDb( const char* query, int repeat )
QueryComponent( const char* name, bool mustExist )
QueryFlags( FuBi::FunctionFlagBuilder& builder ) \
RadiansToDegrees( float f )
RandomFloat( float maxFloat )
RandomFloat( float minFloat, float maxFloat )
RandomInt( int maxInt )
RandomInt( int minInt, int maxInt )
ReceiveMessage( const UIMessage& msg )
ReconstructDependancy(Goid src, Goid tgt, float reqrange)
ReformatTooltip( const gpstring & sText, int lineNum, DWORD dwColor )
ReloadWorld( bool fullRestart )
RemoveActiveItem( UIWindow * pItem )
RemoveCameraPosition( const gpstring& point_name )
RemoveChild( Go* child )
RemoveChild( UIWindow * pWindow )
RemoveElement( const gpstring& element )
RemoveElement( int tag )
RemoveFromHotGroup( Goid goid )
RemoveMemberNow( Go* member )
ReplaceHotGroup( const GopColl& coll )
Report( const char* contextName, const char* msg )
Report( ReportSys::Context* context, const char* msg )
ReportF( const char* contextName, const char* format, ... )
ReportF( ReportSys::Context* context, const char* format, ... )
ReportItemSwitching( Go * pToEquip )
Request( eWorldState next )
Request( eWorldState next, float time )
RequestBeyondRange( MCP::eReqRetCode code )
RequestFailed( MCP::eReqRetCode code )
RequestOk( MCP::eReqRetCode code )
RequestQuit( bool force )
ResetMoodVolume( float fadeTime )
ResetTimerSeconds( int id, float timeFromBase )
Resize( int width, int height )
RestoreWorldViewport( float duration )
Right( gpstring& str, int len )
Rotate( float rad )
RotateBoneX(const char* b, float a)
RotateBoneX(const char* bonename, float anginradians, bool relative)
RotateBoneY(const char* b, float a)
RotateBoneY(const char* bonename, float anginradians, bool relative)
RotateBoneZ(const char* b, float a)
RotateBoneZ(const char* bonename, float anginradians, bool relative)
RotateIndexedBoneX(int b, float a)
RotateIndexedBoneX(int bonenum, float anginradians, bool relative)
RotateIndexedBoneY(int b, float a)
RotateIndexedBoneY(int bonenum, float anginradians, bool relative)
RotateIndexedBoneZ(int b, float a)
RotateIndexedBoneZ(int bonenum, float anginradians, bool relative)
RotateMembers( float rad )
Round( float f )
RoundToFloat( float f )
RSAckLatency( float serverTime )
RSActivateChapter( const char * name, int state )
RSActivateQuest( const char * name, int state )
RSAdd( Go* item, eInventoryLocation il, eActionOrigin origin, bool autoPlace )
RSAddGold( int gold )
RSAddMemberNow( Go* member )
RSAddPackmule( Go * pHire, Go * pBuyer )
RSAddShopper( Goid shopper )
RSAddToDestGridbox( GridItem item, Goid destTrade, Goid sourceTrade )
RSAddToStore( Goid item, Goid member, int value )
RSAttemptTradeCompletion( Go * pSource, Go * pDest )
RSAutoEquip( eEquipSlot slot, Goid item, eActionOrigin origin )
RSAutoEquip( eEquipSlot slot, Goid item, eActionOrigin origin, bool bAutoplace )
RSCancelTrade( Go * pSource, Go * pDest )
RSCastLifeHealingSpell( eActionOrigin jo )
RSCastLifeHealingSpells( const_mem_ptr ptr, eActionOrigin jo )
RSChat( gpwstring const & sChat )
RSChat( gpwstring const & sChatFrom, gpwstring const & sChatText )
RSChatPlayer( gpwstring const & sChat, Player * player )
RSClearFocusGo( PlayerId playerId )
RSCloneGo( const GoCloneReq& cloneReq )
RSCloneGo( const GoCloneReq& cloneReq, const char* templateName )
RSCollectLoot( const_mem_ptr ptr )
RSCollectLootMp( Goid member, const_mem_ptr ptr )
RSCombinePotions( Go * pSource, Go * pDest, Go * pMember, float fillAmount, float amountLeft )
RSCompletedQuest( const char * name, Goid activator )
RSCompleteTrade( Go * pSource, Go * pDest )
RSCreateAddItem( eInventoryLocation il, const gpstring & templateName )
RSCreatePlayer( const wchar_t * name, ePlayerController controller )
RSCreateTombstone( Goid member )
RSDeactivateQuest( const char * name )
RSDisplayImportCharacter( const gpstring & templateName, DWORD machineId )
RSDisplayMessage( gpwstring const & message, DWORD color )
RSDoJob( JobReq const & req )
RSDoJobPacker( const_mem_ptr packola )
RSDrinkLifeHealingPotion( eActionOrigin jo )
RSDrinkLifeHealingPotions( const_mem_ptr ptr, eActionOrigin jo )
RSDrinkManaHealingPotion( eActionOrigin jo )
RSDrinkManaHealingPotions( const_mem_ptr ptr, eActionOrigin jo )
RSDrop( Go * item, SiegePos Pos, eQPlace QPlace, eActionOrigin origin )
RSDropGold( int gold, SiegePos Pos, eQPlace QPlace, eActionOrigin origin )
RSEquip( eEquipSlot slot, Goid item, eActionOrigin origin )
RSGeneratePortrait( PlayerId playerId )
RSGet( Go * item, eQPlace place, eActionOrigin origin )
RSGive( Go * target, Go * item, eQPlace place, eActionOrigin origin )
RSGoldTransferComplete( Go * pMember, int gold )
RSGuard( Go * target, eQPlace place, eActionOrigin origin )
RSImportCharacter( const gpstring& spec, int characterIndex )
RSJoinTeam( TeamId team, PlayerId player )
RSLeaveStagingArea( PlayerId playerId )
RSMarkForDeletion( Go* go, bool retire , bool fadeOut , bool mpdelayed )
RSMarkForDeletion( Goid goid, bool retire , bool fadeOut , bool mpdelayed )
RSMarkForDeletion( Scid scid, bool retire , bool fadeOut , bool mpdelayed )
RSMarkGoAndChildrenForDeletion( Go* go, bool retire , bool fadeOut , bool mpdelayed )
RSMarkGoAndChildrenForDeletion( Goid goid, bool retire , bool fadeOut , bool mpdelayed )
RSMarkGoAndChildrenForDeletion( Scid scid, bool retire , bool fadeOut , bool mpdelayed )
RSMove( SiegePos const & Pos, eQPlace place, eActionOrigin origin )
RSPaperDollHandleItem( Goid member, eEquipSlot slot, Goid inventory_item )
RSPauseAllClients( bool pause, PlayerId requestingPlayer )
RSRemove( Go* item, bool drop )
RSRemove( Go* item, bool drop, Go* dropFor )
RSRemoveFromDestGridbox( int item, Player * destPlayer )
RSRemoveFromStore( Goid item, Goid member, int cost, bool bAutoPlace )
RSRemoveMemberNow( Go* member )
RSRemoveShopper( Goid shopper )
RSReqInitiateTrade( Go * pSource, Go * pDest, Go * pItem )
RSResetUnconsciousDuration( float duration )
RSReviveCharacter( Goid member )
RSRotateSpells( bool bPrimarySlot, Goid member )
RSSelect( eInventoryLocation il, eActionOrigin origin )
RSSelectConversation( const char * sConversation )
RSSelectNextTeam( PlayerId player, bool reverse )
RSSelectTeam( PlayerId player, gpstring const & texture )
RSSendReqTalkEnd( Goid member, Goid talker )
RSSetButtonValue( const gpstring & sValue )
RSSetCombatOrders( eCombatOrders Order )
RSSetCurrentAspectTexture( int texIndex, const char* textureName )
RSSetDispositionOrders( eActorDisposition Order )
RSSetFocusGo( Goid goid )
RSSetFocusOrders( eFocusOrders Order )
RSSetForceGet( bool bSet )
RSSetGameEnded( bool bSet )
RSSetGameSpeed( float x )
RSSetGold( int gold )
RSSetGoldValue( int value )
RSSetHeroCloneSourceTemplate( gpstring const & name )
RSSetHeroHead( gpstring const & name )
RSSetHeroName( gpwstring const & name )
RSSetHeroSkin( ePlayerSkin skin, gpstring const & name )
RSSetHeroUberLevel( float level )
RSSetIsOnZone( bool flag )
RSSetLoadProgress( float ratio )
RSSetLocation( Go* item, eInventoryLocation il, bool autoPlace )
RSSetMovementOrders( eMovementOrders Order )
RSSetName( gpwstring const & name )
RSSetReadyToPlay( bool flag )
RSSetStartingGroup( const gpstring & sGroup )
RSSetTeamSign( PlayerId player, const gpstring & teamSign )
RSSetTradeGoldAmount( int gold )
RSSetTradeInvalid( Go * pSource )
RSSetTradeValid( Go * pSource )
RSSetWorldState( eWorldState state )
RSStop( eActionOrigin origin )
RSTalk( Go * pObject, Go * pMember, bool noqueueclear )
RSTradeAccept( bool bAccept, Player * sourcePlayer, Player * destPlayer )
RSTradeFailed( Go * pSource, Go * pDest )
RSTradeZeroGold( Go * pSource, Go * pDest )
RSTransfer( Go* item, Go* dest, eInventoryLocation il, eActionOrigin origin, bool autoPlace )
RSUnequip( eEquipSlot slot, eActionOrigin origin )
RSUpdateQuestCompletion( const char * name, Goid activator )
RSUse( Go * item, eQPlace place, eActionOrigin origin )
RSUserPause( bool pause, PlayerId requestingPlayer )
RunScript( const char *sName, Goid target, Goid source, const char *sParams, Goid Owner, eWorldEvent type )
RunScriptSpecial( const char *sName, const char *sParams, Goid Owner, eWorldEvent type, const SiegePos &target_pos,
SActivateTip( const gpstring & sTip, Goid target )
SAddGenericState( const char* sName, const char* sDescription, float timeout, Goid caster, Goid spell, float spell_level )
SameNoCase( const char* l, const char* r )
SameNoCase( const char* l, const char* r, int len )
SameWithCase( const char* l, const char* r )
SameWithCase( const char* l, const char* r, int len )
SAnimate( const AnimReq& animReq )
SApplyEnchantments( Goid target, Goid source )
SApplyEnchantmentsByName( Goid target, Goid source, const char *sName )
SAssignFrustumToGo( FrustumId frustumId, Goid goid )
SAutoGet( Goid item, eActionOrigin origin )
SAutoGive( Goid actor, Goid item, eActionOrigin origin )
SAutoUse( Goid item, eActionOrigin origin, bool bDeleteExpendedItem )
SaveGame( const char* saveName )
SBanPlayer( PlayerId playerId )
SBeginGive( Goid actor, eActionOrigin origin )
SBeginUse( Goid item )
Scale( float scale )
SCast( Go* target )
SCloneGo( const GoCloneReq& cloneReq )
SCloneGo( const GoCloneReq& cloneReq, const char* templateName )
SCopyMembership( Goid go )
SCreateFrustumForGo( Goid goid )
SCreateGo( const GoCreateReq& createReq )
Screen( const char* msg )
ScreenF( const char* format, ... )
ScreenShot( const char* fileName )
ScreenShot( const wchar_t* fileName )
SDeactivateTrigger( Goid owngoid, WORD trignum )
SDisplayMessage( const char * msgName )
SDisplayMessage1Party( const char * msgName, Go * party )
SDisplayMessage2Party( const char * msgName, Go * party1, Go * party2 )
SDoJob( JobReq const & req )
Select( bool select )
Select( Goid goid )
Select( Goid goid, bool select )
SelectElement( const gpstring& sElement )
SelectElement( int tag )
Send( WorldMessage const & msg )
SendDelayed( WorldMessage const & msg, float delay )
SEndGive( Goid actor, Goid item, eActionOrigin origin )
SendUIMessage( eUIMessage code, const char* window_name )
SendUIMessage( eUIMessage code, const char* window_name, const char* sInterface )
SEndUse( Goid item )
SendWorldMessage( eWorldEvent event, Goid from, Goid to )
SendWorldMessage( eWorldEvent event, Goid from, Goid to, DWORD data )
SendWorldMessage( eWorldEvent event, Goid from, Scid to )
SendWorldMessage( eWorldEvent event, Goid from, Scid to, DWORD data )
Set( int index, Go* g )
Set( int index, Goid g )
Set( int index, UIWindow* wnd )
SetAbortScriptID( Goid goid, const gpstring &sEnchantmentName, SFxSID id )
SetActive( bool active )
SetActiveColor( DWORD dwColor )
SetActiveCursor( UICursor * pCursor )
SetActiveFogGo( Goid go, float transTime )
SetActiveMusicGo( Goid go, float transTime )
SetActiveRainGo( Goid go, float transTime )
SetActiveSnowGo( Goid go, float transTime )
SetActiveSunGo( Goid go, float transTime )
SetActiveWindGo( Goid go, float transTime )
SetActorAutoFidgets( bool flag )
SetActorWeaponPreference( eWeaponPreference value )
SetAICaching( bool value )
SetAllignedTeam( int team )
SetAllowInput( bool bInput )
SetAllowUserPress( bool bAllow )
SetAlpha( BYTE alpha )
SetAlpha( float alpha )
SetAlwaysGib( const bool Flag )
SetAutoPlaceNotify( bool bSet )
SetAutoSize( bool autosize )
SetAutoTransfer( bool bTransfer )
SetAvgMoveVelocity( float v )
SetBackgroundColor( unsigned int color )
SetBackgroundFill( bool fill )
SetBlendGroupAnimWeight(DWORD g,DWORD i,float relw)
SetBlendGroupWeight(DWORD g,float gw)
SetBlockMCP( const bool Flag )
SetBoneFrozenState(const char* bonename, eBoneFreeze f, bool recursive)
SetBool( const char * key, bool value )
SetBool( int tag, const char * key, bool value )
SetBorder( bool bBorder )
SetBorderColor( unsigned int color )
SetBorderPadding( int padding )
SetBoxHeight( int height )
SetBoxWidth( int width )
SetButtonDown( bool bButtonDown )
SetCameraMode( eCameraMode mode )
SetCameraMode( eCameraMode mode, bool bClearOldOrders )
SetCanBePickedUp( bool bSet )
SetCanSell( bool bCanSell )
SetCheck( bool bCheck )
SetCheckState( bool bChecked )
SetChildListbox( UIListbox *pListbox )
SetClickDelay( float delay )
SetCode( eUIMessage msg )
SetColor( DWORD color )
SetColor( unsigned int color )
SetColumns( int columns )
SetCommonTemplate( const gpstring& sTemplate )
SetComponentBool( const char* componentName, const char* propertyName, bool valBool )
SetComponentFloat( const char* componentName, const char* propertyName, float valFloat )
SetComponentInt( const char* componentName, const char* propertyName, int valInt )
SetComponentScid( const char* componentName, const char* propertyName, Scid valScid )
SetComponentString( const char* componentName, const char* propertyName, const gpstring& valString )
SetConsumable( bool bConsumable )
SetConsumesItems( bool bSet )
SetContinuePickup( bool bPickup )
SetCrowdingMCP( const bool Flag )
SetDamageAll( SimID id, bool state )
SetDamageMaxNatural( float damage )
SetDamageMinNatural( float damage )
SetDeactivateOverlapped( bool bSet )
SetDebugHudOptions( eDebugHudOptions options, bool set )
SetDebugMCP( const bool Flag )
SetDebugState( const bool state )
SetDiffuseColor( DWORD c )
SetDirection( vector_3 const & dir )
SetDisableUpdate( bool bSet )
SetDockGroup( const gpstring& group )
SetDoesBlockPath( bool set )
SetDouble( const char * key, float value )
SetDouble( int tag, const char * key, float value )
SetDragAllowed( bool bAllowed )
SetDraggable( bool bDraggable )
SetDragGridX( int x )
SetDragGridY( int y )
SetDragTime( float time )
SetDragTimeElapsed( float time )
SetDrawOrder( int order )
SetDrawSelectionIndicator( bool set )
SetDrawText( bool bDrawText )
SetElementIcon( const gpstring& text, int icon )
SetElementIcon( int tag, int icon )
SetElementSelectable( int tag, bool bSelectable )
SetElementText( const int tag, const int line, const gpstring & sText, const DWORD dwColor )
SetEnabled( bool bEnabled )
SetEnchantmentDoneMessage( Goid goid, const gpstring &sEnchantmentName, Goid send_to, eWorldEvent event )
SetEscNisToFrontEnd( bool bSet )
SetExpanded( bool bExpanded )
SetExperienceBenefactor( Goid go )
SetExperienceBenefactorSkill( const char *s )
SetFadeIn( bool set )
SetFixedLocation( bool bSet )
SetFloat( const char * key, float value )
SetFloat( int tag, const char * key, float value )
SetFont( const gpstring& sFont )
SetFontHeight( int height )
SetForceCheck( bool bCheck )
SetForceClientAllowed( bool set )
SetForcePosition( bool set )
SetForceServerOnly( bool set )
SetFreezeMeshFlag(bool flag)
SetGameSpeed( float x )
SetGameSpeed( float x, bool printToScreen )
SetGibMultiplier( const int Count )
SetGoalMCP( const bool Flag )
SetGoldValue( int value )
SetGridbox( UIGridbox* box )
SetGridType( const gpstring& type )
SetGroup( const gpstring& group )
SetGuiDisabled( bool bDisable )
SetHasFocus( bool bSet )
SetHasTexture( bool bTexture )
SetHeight( int height )
SetHideMeshFlag(bool flag)
SetHitSelect( bool bSelect )
SetHudMCP( const bool Flag )
SetIgnoreItem( bool bSet )
SetIgnorePartyMembers( SimID id )
SetImeColor( DWORD dwColor )
SetIndex( int index )
SetIndexedBoneFrozenState(DWORD bone_index, eBoneFreeze f, bool recursive)
SetInitialCommand( Scid command )
SetInputType( UI_INPUT_TYPE type )
SetInstanceAttrFlags(DWORD newval)
SetInt( const char * key, int value )
SetInt( int tag, const char * key, int value )
SetIntensity( float intensity )
SetInterfaceParent( const gpstring& parent_name )
SetInterpolationMode( eCameraInterpolate interpolate )
SetInvalid( bool bSet )
SetInvalidColor( DWORD dwColor )
SetIsCollidable( bool set )
SetIsCommonControl( bool bSet )
SetIsInvincible( bool set )
SetIsRepeater( bool repeater )
SetIsVisible( bool set )
SetItemDetect( bool bDetect )
SetItemMarkup( float markup )
SetJustification( JUSTIFICATION justify )
SetKey( int key )
SetLabelMCP( const bool Flag )
SetLagMCP( const float val )
SetLatencyQueryFrequency( int f )
SetLButtonDown( bool lbutton )
SetLeadElement( int lead )
SetLifeState( eLifeState state )
SetLineSpacer( int set )
SetLineText( int lineNum, const gpstring& sText, DWORD dwColor )
SetLinkOffsetPosition(const vector_3& v)
SetLinkOffsetRotation(const Quat& q)
SetLocalPlace( bool bSet )
SetLocalRetryDuration( float duration )
SetLockMeshFlag(bool flag)
SetMarkForDeletion( bool bDelete )
SetMaxDistance( float max_dist )
SetMaxStringSize( int size )
SetMayAttack( bool flag )
SetMayBeAttacked( bool flag)
SetMemberDirection( vector_3 const & dir )
SetMidState( bool bSet )
SetMinDistance( float min_dist )
SetMode( eDebugProbe mode )
SetMood( const gpstring& moodName, float transTime )
SetMouseX( int x )
SetMouseY( int y )
SetMPSendFrequency( int Hz )
SetMPSleep( int sleep )
SetMsgState( int state )
SetName( const gpstring& name )
SetNewTimerSeconds( int id, float timeFromNow )
SetNode( const SiegeGuid& g )
SetNormalizedRect( float left, float right, float top, float bottom )
SetNormalizeResize( bool bSet )
SetNoStartupFx( bool set )
SetOmni( bool omni )
SetOptimizeMCP( const bool Flag )
SetPackMemberStats( Goid party_member )
SetParent( Go* parent )
SetParentWindow( UIWindow *parent )
SetPassThrough( bool bPass )
SetPermanentFocus( bool bFocus )
SetPollPeriod( float period )
SetPos( const vector_3& v )
SetPosition( float x, float y )
SetPosition( SiegePos const & pos )
SetPrepareToDrawNow( bool set )
SetPressedState( bool pressed )
SetProbeObject( Goid object )
SetProbeObject( Scid object )
SetProjectileLauncher( Goid id )
SetPromptIndex( int index )
SetPulloutOffset( int offset )
SetQuestBool( Goid goid, const char* mapName, const char* keyName, bool valBool )
SetQuestFloat( Goid goid, const char* mapName, const char* keyName, float valFloat )
SetQuestInt( Goid goid, const char* mapName, const char* keyName, int valInt )
SetQuestString( Goid goid, const char* mapName, const char* keyName, const gpstring& valString )
SetRadioGroup( const gpstring& sGroup )
SetRank( DWORD rank )
SetRButtonDown( bool rbutton )
SetRect( int left, int right, int top, int bottom, bool bAnimation )
SetReportFilters( const gpstring& filter )
SetRollover( bool bRollover )
SetRolloverKey( const gpstring& sKey )
SetRot( const Quat& q )
SetRows( int rows )
SetScale( float scale )
SetScidBit( Scid scid, int index, bool value )
SetScidBits( Scid scid, DWORD value )
SetScreenName( const gpstring& name )
SetScrolling( bool bScrolling )
SetScrollRate( float scrollRate )
SetScrollThrough( bool bSet )
SetSelectedTag( int tag )
SetSendDelay( float t )
SetShape( gpstring const & name )
SetShowMCP( const bool Flag )
SetShowPathsMCP( const bool Flag )
SetShowSpatialQueries( bool flag )
SetShowTriggerSys( const bool Flag )
SetShowTriggerSysHits( const bool Flag )
SetSize( float width, float height )
SetSnapToTerrain( bool snap )
SetSomeVariable( int )
SetStartedBySECommand( Scid scid )
SetStartingOrient( const Quat& quat )
SetStartingPos( const SiegePos& siegePos )
SetStore( bool bStore )
SetString( const char * key, const gpstring & value )
SetString( int tag, const char * key, const gpstring & value )
SetTag( long tag )
SetTargetTypeFlags( eTargetTypeFlags flags )
SetTestMCP( const bool Flag )
SetText( const gpstring & text, bool bReset )
SetText( const gpstring& sText )
SetText( const gpstring& text )
SetTextColor( unsigned int color )
SetTextPosition( int x, int y )
SetTextureIndex( unsigned int id )
SetTiledTexture( bool bTiled )
SetTimer( float Delay )
SetTimerGlobal( int id, bool global )
SetTimerRepeatCount( int id, int count )
SetToolTip( const gpwstring& HelpText, const gpstring& HelpTextBox, bool bIsToolTip )
SetToolTipText( const gpstring& sText )
SetTopmost( bool bSet )
SetTraitInterruptable( bool flag )
SetTraitUseSpatialSensors( bool flag )
SetType( UI_CONTROL_TYPE type )
SetUncachingEnabled( bool flag )
SetUVRect( float left, float right, float top, float bottom )
SetValue( UINT32 guid )
SetVariable( UINT32 index, SiegePos &position, Goid owner )
SetVerbose( bool verbose )
SetVictoryConditionValue( const char * condition, int value )
SetVisible( bool bVisible )
SetW( float f )
SetWorldViewport( float width, float height, float fovDegrees, float duration )
SetX( float f )
SetY( float f )
SetZ( float f )
SExplodeGo( Goid Object, float magnitude, const vector_3 &initial_velocity )
SFadeInterface( const char * szInterface, float duration, Goid target )
ShiftGroup( const gpstring& sInterface, const gpstring& sGroup, int xShift, int yShift )
ShiftInterface( const gpstring& sInterface, int xShift, int yShift )
Show( const char * properties )
ShowGroup( const char * szGroup, bool bShow, bool bMessage , const char * szInterface )
ShowHiddenText( bool flag )
ShowInterface( const gpstring& interface_name )
ShowOnly( const char * properties )
Sin( float f )
SIncrementStat( const char * stat, Player * player, int value )
SinWave( const float a, const float b, const float c, const float d, const float t, const float frequency, const float amplitude )
SKickPlayer( PlayerId playerId )
SLaunchAmmo( float velocity, const SiegePos &firingPos, const SiegePos &targetPos, float x_error, float y_error, Goid intended_target )
SLeaderMessage( eGameStat stat, const char * msgName )
SMarkForDeletion( Go* go )
SMarkForDeletion( Go* go, bool retire )
SMarkForDeletion( Go* go, bool retire, bool fadeOut )
SMarkForDeletion( Go* go, bool retire, bool fadeOut, bool mpdelayed )
SMarkForDeletion( Goid goid )
SMarkForDeletion( Goid goid, bool retire )
SMarkForDeletion( Goid goid, bool retire, bool fadeOut )
SMarkForDeletion( Goid goid, bool retire, bool fadeOut, bool mpdelayed )
SMarkForDeletion( Scid scid )
SMarkForDeletion( Scid scid, bool retire )
SMarkForDeletion( Scid scid, bool retire, bool fadeOut )
SMarkForDeletion( Scid scid, bool retire, bool fadeOut, bool mpdelayed )
SMarkGoAndChildrenForDeletion( Go* go )
SMarkGoAndChildrenForDeletion( Go* go, bool retire )
SMarkGoAndChildrenForDeletion( Go* go, bool retire, bool fadeOut )
SMarkGoAndChildrenForDeletion( Go* go, bool retire, bool fadeOut, bool mpdelayed )
SMarkGoAndChildrenForDeletion( Goid goid )
SMarkGoAndChildrenForDeletion( Goid goid, bool retire )
SMarkGoAndChildrenForDeletion( Goid goid, bool retire, bool fadeOut )
SMarkGoAndChildrenForDeletion( Goid goid, bool retire, bool fadeOut, bool mpdelayed )
SMarkGoAndChildrenForDeletion( Scid scid )
SMarkGoAndChildrenForDeletion( Scid scid, bool retire )
SMarkGoAndChildrenForDeletion( Scid scid, bool retire, bool fadeOut )
SMarkGoAndChildrenForDeletion( Scid scid, bool retire, bool fadeOut, bool mpdelayed )
SPlayChapterSound( const char * szSample, Goid target )
SPlayMaterialSound( const char* eventName, const char* dstMaterial, bool local3d )
SPlayMaterialSound( const char* eventName, Goid dstGoid , bool local3d )
SPlayVoiceSound( const char* eventName, bool local3d )
SPostWorldMessage( eWorldEvent event, Goid from, Scid to, DWORD data, float delay )
SPostWorldMessage( eWorldEvent event, Goid from, Scid to, float delay )
SReleaseFrustumFromGo( Goid goid, bool eraseFrustum )
SRemoveGenericState( const char* sName )
SReplaceNodalTexture( SiegeId node, int tex_index, const gpstring& newTexName )
SRequestNodeConnection( SiegeId targetNode, const DWORD targetDoor,
SRequestNodeTransition( SiegeId targetNode, const DWORD targetDoor,
SRunMpScript( const char *sName, Goid target, Goid source ,const char *sParams, Goid Owner, eWorldEvent type )
SRunScript( const char *sName, Goid target, Goid source ,const char *sParams, Goid Owner, eWorldEvent type )
SRunScriptSpecial( const char *sName, const char *sParams, Goid Owner, eWorldEvent type, const SiegePos &target_pos,
SScreen( const char* msg )
SScreen( DWORD machineId, const char* msg )
SScreenF( const char* format, ... )
SScreenF( DWORD machineId, const char* format, ... )
SSend( WorldMessage & message, MESSAGE_DISPATCH_FLAG flags )
SSendActionToPartyMembersRemainingInNode(SiegeId node, const gpstring& fadereq )
SSendDelayed( WorldMessage & message, MESSAGE_DISPATCH_FLAG flags )
SSendWorldMessage( eWorldEvent event, Goid from, Scid to )
SSendWorldMessage( eWorldEvent event, Goid from, Scid to, DWORD data )
SSetAlignment( eActorAlignment alignment )
SSetAllowRespawn( bool bSet )
SSetAspectTextureSpeed( int texIndex, const float texSpeed )
SSetCanShowHealth( bool bSet )
SSetCanTalk( bool bCanTalk )
SSetCurrentAspectTexture( int texIndex, const char* textureName )
SSetCurrentLife( float life )
SSetCurrentMana( float mana )
SSetCustomHead( const gpstring& ch )
SSetDropInvOption( eDropInvOption option )
SSetDynamicTexture( ePlayerSkin skin, const char* name )
SSetFreezeMeshFlag( bool set )
SSetGhostTimeout( float timeout )
SSetGoldValue( int value, bool bForceRC )
SSetInventoryDirty( bool set )
SSetIsGhostUsable( bool set )
SSetIsSelectable( bool set )
SSetIsUsable( bool set )
SSetIsVisible( bool set )
SSetLifeState( eLifeState state )
SSetLifeState( eLifeState state, bool forceUpdate )
SSetLockMeshFlag( bool set )
SSetMaxLife( float life )
SSetMaxMana( float maxMana )
SSetNaturalMaxLife( float maxLife )
SSetNaturalMaxMana( float maxMana )
SSetNodalTextureAnimationSpeed( SiegeId node, int tex_index, float speed )
SSetNodalTextureAnimationState( SiegeId node, int tex_index, bool bState )
SSetOrientation( const Quat& quat )
SSetParent( Go* parent )
SSetPlacement( const SiegePos& pos, const Quat& quat, bool snapToTerrain )
SSetPlayer( PlayerId id )
SSetPosition( const SiegePos& pos, bool snapToTerrain )
SSetQuestBool( Goid goid, const char* mapName, const char* keyName, bool valBool )
SSetQuestFloat( Goid goid, const char* mapName, const char* keyName, float valFloat )
SSetQuestInt( Goid goid, const char* mapName, const char* keyName, int valInt )
SSetQuestString( Goid goid, const char* mapName, const char* keyName, const gpstring& valString )
SSetScidBit( Scid scid, int index, bool value )
SSetScidBits( Scid scid, DWORD value )
SSetScreenName( const gpstring& name )
SSetTeamVictoryConditionMet( const char * condition, bool met, int team )
SSetVictoryConditionMet( const char * condition, bool met )
SStopScript( Goid id, const char *sName )
SStopScript( SFxSID id )
StartCameraFx( const char* name )
StartCameraFx( const char* name, const char* params )
StartCaptureMovie( const char* fileName, float fps, float secondsFromNow, float durationSeconds )
StartDecalFx( DecalId siegeDecal, const char* name )
StartDecalFx( DecalId siegeDecal, const char* name, const char* params )
StartDropAnimation( Goid item, const SiegePos &dropPos, const Quat &dropQuat )
StartExpiration( Go* go, bool forced )
StartLightFx( LightId siegeLight, const char* name )
StartLightFx( LightId siegeLight, const char* name, const char* params )
StartWatching( Goid watcher, Goid watched )
StopAmbientTrack( float fadeTime )
StopBattleTrack( float fadeTime )
StopScript( Goid id, const char *sName )
StopScript( SFxSID id )
StopSound( DWORD soundId )
StopStandardTrack( float fadeTime )
StopWatching( Goid watcher, Goid watched )
SubAnimDurationForStance( DWORD stance, DWORD index) const
SubmitCameraOffset( const SiegePos& offset )
SubmitCameraOffset( const vector_3& offset )
SubmitCameraPosition( const gpstring& point_name, const CameraEulerPosition& point )
SubmitCameraPosition( const gpstring& point_name, const CameraMatrixPosition& point )
SubmitCameraPosition( const gpstring& point_name, const CameraPosition& point )
SubmitCameraPosition( const gpstring& point_name, const CameraQuatPosition& point )
SubmitCameraPosition( const gpstring& point_name, const CameraVectorToCameraPosition& point )
SubmitCameraPosition( const gpstring& point_name, const CameraVectorToTargetPosition& point )
SubmitOrder( const gpstring& point_name, eCameraOrder order , float time ,
tag it with FUBI_EXPORT,
TakesOver( Job * oldJob )
TestBits( eLogicalNodeFlags l, eLogicalNodeFlags r )
TestDebugHudOptions( eDebugHudOptions options ) const
TestDebugHudOptionsEq( eDebugHudOptions options ) const
TestEquip( Goid item, eEquipSlot slot ) const
TestEquipPassive( Goid item ) const
TestGet( Goid item ) const
TestGet( Goid item, bool silent ) const
TestLog( const char* msg )
TestLogF( const char* format, ... )
ToFloat( int i )
Toggle( const char* context )
ToggleDebugHudOptions( eDebugHudOptions options )
ToggleMode( eDebugProbe mode )
ToInt( float f )
ToSiegePosRef( int siegePosRef )
ToString( eAlteration e )
ToString( eAxisHint val )
ToString( eCameraInterpolate val )
ToString( eCameraOrder val )
ToString( eJobAbstractType Type )
ToString( eMoodRoomType val )
ToString( eUIMessage e )
ToString( eWorldEvent val )
ToString( eWorldState e )
ToString( FADETYPE val )
ToString( gpstring& out, const Type& obj, FuBi::eXfer /*xfer*/ )
ToString( gpstring& out, const Type& obj, FuBi::eXfer xfer )
ToString( JUSTIFICATION e )
ToString( MCP::eOrientMode x )
ToString( MCP::eReqRetCode x )
ToString( MCP::eRequest x )
ToString( MCP::eRID x )
ToString( UI_ACTION e )
ToString( UI_CONTROL_TYPE e )
ToString( UI_INPUT_TYPE e )
Translate( const char* message )
TranslateBoneX(const char* b, float o)
TranslateBoneX(const char* bonename, float offset, bool relative)
TranslateBoneY(const char* b, float o)
TranslateBoneY(const char* bonename, float offset, bool relative)
TranslateBoneZ(const char* b, float o)
TranslateBoneZ(const char* bonename, float offset, bool relative)
TranslateIndexedBoneX(int b, float o)
TranslateIndexedBoneX(int bonenum, float offset, bool relative)
TranslateIndexedBoneY(int b, float o)
TranslateIndexedBoneY(int bonenum, float offset, bool relative)
TranslateIndexedBoneZ(int b, float o)
TranslateIndexedBoneZ(int bonenum, float offset, bool relative)
TranslateMsg( const char* message )
UnderstandsJob( eJobAbstractType eType ) const
UnMarkInterfaceForDeactivation( const gpstring& sInterface )
UpdateAbsolute(float t, float min_t)
UpdateBlender(float deltat)
UpdateClassDesignation( Goid Client )
UserPause( bool pause )
Warning( const char* msg )
WarningF( const char* format, ... )
XPToLevel( float xp ) const
